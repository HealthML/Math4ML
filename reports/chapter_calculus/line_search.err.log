Traceback (most recent call last):
  File "/opt/anaconda3/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/asyncio/base_events.py", line 685, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/anaconda3/lib/python3.12/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt

# Define a 2D quadratic objective function and its gradient
def f_2d(x):
    return (x[0] - 2)**2 + 2*(x[1] - 3)**2

def grad_f_2d(x):
    return np.array([2*(x[0] - 2), 4*(x[1] - 3)])

exact_solution = np.array([2, 3])  # Exact solution for the quadratic function

# Define starting point and descent direction
x0 = np.array([0.0, 0.0])
d = -grad_f_2d(x0)  # steepest descent direction

# Line function phi(eta) = f(x0 + eta * d)
def phi(eta):
    return f_2d(x0 + eta * d)

def phi_prime(eta):
    grad = grad_f_2d(x0 + eta * d)
    return np.dot(grad, d)

# Wolfe parameters
c1 = 3e-1 # Armijo parameter
c2 = 0.9 # Curvature parameter, not used in this plot
beta = 0.5 # Backtracking shrinkage factor
eta_vals = np.linspace(-0.1, 0.85, 200)
phi_vals = [phi(a) for a in eta_vals]
armijo_bound = phi(0) + (phi_prime(0) * eta_vals)
armijo_RHS_line = phi(0) + (c1 * phi_prime(0) * eta_vals )

# Choose a candidate eta
eta_start = 0.8
eta_candidates = [eta_start * beta**i for i in range(3)]
curvature_lhs = [phi_prime(a) for a in eta_candidates]
armijo_lhs = [phi(a) for a in eta_candidates]
curvature_rhs = [c2 * phi_prime(0) for a in eta_candidates]
armijo_rhs = [phi(0) + c1 * a * phi_prime(0) for a in eta_candidates]

# Generate 2D contour plot data
x = np.linspace(-1, 4, 400)
y = np.linspace(-1, 10.5, 400)
X, Y = np.meshgrid(x, y)
Z = (X - 2)**2 + 2*(Y - 3)**2

# Path of x(eta) = x0 + eta * d
etas_path = np.linspace(0, 1.5, 50)
path = np.array([x0 + a * d for a in etas_path])

# Create subplots
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6))

# Plot 2D contour and line search path
contour = ax1.contour(X, Y, Z, levels=30, cmap='viridis')
ax1.scatter(exact_solution[0], exact_solution[1], color='black', label=r'$\\mathbf{x}^*$ (exact solution)')
ax1.plot(path[:, 0], path[:, 1], color='red', label='Line search path')
ax1.scatter(*x0, color='blue', label=r'Start $\mathbf{x}_0$')
ax1.scatter(*(x0 + eta_candidates[0] * d), color='red', label=r'rejected Backtracking evaluation $\mathbf{x}_0 + 0.8 \mathbf{d}$')
ax1.scatter(*(x0 + eta_candidates[1] * d), color='red', label=r'rejected Backtracking evaluation $\mathbf{x}_0 + 0.4 \mathbf{d}$')
ax1.scatter(*(x0 + eta_candidates[-1] * d), color='green', label=r'accepted step $\mathbf{x}_0 + 0.2 \mathbf{d}$')
ax1.set_title("2D Contour Plot of $f(x)$ and Search Direction")
ax1.set_xlabel("x")
ax1.set_ylabel("y")
ax1.set_xlim(-1, 4)
ax1.set_ylim(-1, 10.5)
ax1.legend()

# Plot phi(eta) along search direction
ax2.plot(eta_vals, phi_vals, label=r'$\phi(\eta) = f(x_0 + \eta d)$', color='red')
i_eta_vals_nonegative = eta_vals >= 0
ax2.plot(eta_vals, armijo_bound, '--', label='Armijo bound', color='gray')
ax2.plot(eta_vals[eta_vals >= 0], armijo_RHS_line[eta_vals >= 0], '--', label=('Armijo RHS for c=%.2f' % c1), color='purple')
ax2.scatter(0, phi(0), color='blue', label='$\phi(0)$', zorder=5)
ax2.scatter(eta_candidates[:-1], armijo_lhs[:-1], color='red', label='rejected Backtracking evaluations')
ax2.scatter(eta_candidates[-1], armijo_lhs[-1], color='green', label='accepted step size')
ax2.set_title("1D Function Along Search Direction")
ax2.set_xlabel(r'$\eta$')
ax2.set_ylabel(r'$\phi(\eta)$')
ax2.legend()
ax2.grid(True)
ax2.set_xlim(-0.1, 0.85)
ax2.set_ylim(-20, 100)

plt.tight_layout()
plt.show()
------------------

----- stderr -----
<>:75: SyntaxWarning: invalid escape sequence '\p'
<>:75: SyntaxWarning: invalid escape sequence '\p'
/var/folders/bw/7wvb07ss3h57p5s47w2rr3080000gn/T/ipykernel_6197/2661472034.py:75: SyntaxWarning: invalid escape sequence '\p'
  ax2.scatter(0, phi(0), color='blue', label='$\phi(0)$', zorder=5)
----- stderr -----
/var/folders/bw/7wvb07ss3h57p5s47w2rr3080000gn/T/ipykernel_6197/2661472034.py:75: SyntaxWarning: invalid escape sequence '\p'
  ax2.scatter(0, phi(0), color='blue', label='$\phi(0)$', zorder=5)
----- stdout -----
Error in callback <function _draw_all_if_interactive at 0x10c439080> (for post_execute), with arguments args (),kwargs {}:
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
File [0;32m/opt/anaconda3/lib/python3.12/site-packages/IPython/core/formatters.py:343[0m, in [0;36mBaseFormatter.__call__[0;34m(self, obj)[0m
[1;32m    341[0m     [38;5;28;01mpass[39;00m
[1;32m    342[0m [38;5;28;01melse[39;00m:
[0;32m--> 343[0m     [38;5;28;01mreturn[39;00m printer(obj)
[1;32m    344[0m [38;5;66;03m# Finally look for special method names[39;00m
[1;32m    345[0m method [38;5;241m=[39m get_real_method(obj, [38;5;28mself[39m[38;5;241m.[39mprint_method)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/IPython/core/pylabtools.py:170[0m, in [0;36mprint_figure[0;34m(fig, fmt, bbox_inches, base64, **kwargs)[0m
[1;32m    167[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbackend_bases[39;00m [38;5;28;01mimport[39;00m FigureCanvasBase
[1;32m    168[0m     FigureCanvasBase(fig)
[0;32m--> 170[0m fig[38;5;241m.[39mcanvas[38;5;241m.[39mprint_figure(bytes_io, [38;5;241m*[39m[38;5;241m*[39mkw)
[1;32m    171[0m data [38;5;241m=[39m bytes_io[38;5;241m.[39mgetvalue()
[1;32m    172[0m [38;5;28;01mif[39;00m fmt [38;5;241m==[39m [38;5;124m'[39m[38;5;124msvg[39m[38;5;124m'[39m:

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/backend_bases.py:2164[0m, in [0;36mFigureCanvasBase.print_figure[0;34m(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)[0m
[1;32m   2161[0m     [38;5;66;03m# we do this instead of `self.figure.draw_without_rendering`[39;00m
[1;32m   2162[0m     [38;5;66;03m# so that we can inject the orientation[39;00m
[1;32m   2163[0m     [38;5;28;01mwith[39;00m [38;5;28mgetattr[39m(renderer, [38;5;124m"[39m[38;5;124m_draw_disabled[39m[38;5;124m"[39m, nullcontext)():
[0;32m-> 2164[0m         [38;5;28mself[39m[38;5;241m.[39mfigure[38;5;241m.[39mdraw(renderer)
[1;32m   2165[0m [38;5;28;01mif[39;00m bbox_inches:
[1;32m   2166[0m     [38;5;28;01mif[39;00m bbox_inches [38;5;241m==[39m [38;5;124m"[39m[38;5;124mtight[39m[38;5;124m"[39m:

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/artist.py:95[0m, in [0;36m_finalize_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer, *args, **kwargs)[0m
[1;32m     93[0m [38;5;129m@wraps[39m(draw)
[1;32m     94[0m [38;5;28;01mdef[39;00m [38;5;21mdraw_wrapper[39m(artist, renderer, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m---> 95[0m     result [38;5;241m=[39m draw(artist, renderer, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m     96[0m     [38;5;28;01mif[39;00m renderer[38;5;241m.[39m_rasterizing:
[1;32m     97[0m         renderer[38;5;241m.[39mstop_rasterizing()

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/artist.py:72[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     69[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     70[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 72[0m     [38;5;28;01mreturn[39;00m draw(artist, renderer)
[1;32m     73[0m [38;5;28;01mfinally[39;00m:
[1;32m     74[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/figure.py:3154[0m, in [0;36mFigure.draw[0;34m(self, renderer)[0m
[1;32m   3151[0m         [38;5;66;03m# ValueError can occur when resizing a window.[39;00m
[1;32m   3153[0m [38;5;28mself[39m[38;5;241m.[39mpatch[38;5;241m.[39mdraw(renderer)
[0;32m-> 3154[0m mimage[38;5;241m.[39m_draw_list_compositing_images(
[1;32m   3155[0m     renderer, [38;5;28mself[39m, artists, [38;5;28mself[39m[38;5;241m.[39msuppressComposite)
[1;32m   3157[0m [38;5;28;01mfor[39;00m sfig [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39msubfigs:
[1;32m   3158[0m     sfig[38;5;241m.[39mdraw(renderer)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/image.py:132[0m, in [0;36m_draw_list_compositing_images[0;34m(renderer, parent, artists, suppress_composite)[0m
[1;32m    130[0m [38;5;28;01mif[39;00m not_composite [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m has_images:
[1;32m    131[0m     [38;5;28;01mfor[39;00m a [38;5;129;01min[39;00m artists:
[0;32m--> 132[0m         a[38;5;241m.[39mdraw(renderer)
[1;32m    133[0m [38;5;28;01melse[39;00m:
[1;32m    134[0m     [38;5;66;03m# Composite any adjacent images together[39;00m
[1;32m    135[0m     image_group [38;5;241m=[39m []

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/artist.py:72[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     69[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     70[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 72[0m     [38;5;28;01mreturn[39;00m draw(artist, renderer)
[1;32m     73[0m [38;5;28;01mfinally[39;00m:
[1;32m     74[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/axes/_base.py:3070[0m, in [0;36m_AxesBase.draw[0;34m(self, renderer)[0m
[1;32m   3067[0m [38;5;28;01mif[39;00m artists_rasterized:
[1;32m   3068[0m     _draw_rasterized([38;5;28mself[39m[38;5;241m.[39mfigure, artists_rasterized, renderer)
[0;32m-> 3070[0m mimage[38;5;241m.[39m_draw_list_compositing_images(
[1;32m   3071[0m     renderer, [38;5;28mself[39m, artists, [38;5;28mself[39m[38;5;241m.[39mfigure[38;5;241m.[39msuppressComposite)
[1;32m   3073[0m renderer[38;5;241m.[39mclose_group([38;5;124m'[39m[38;5;124maxes[39m[38;5;124m'[39m)
[1;32m   3074[0m [38;5;28mself[39m[38;5;241m.[39mstale [38;5;241m=[39m [38;5;28;01mFalse[39;00m

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/image.py:132[0m, in [0;36m_draw_list_compositing_images[0;34m(renderer, parent, artists, suppress_composite)[0m
[1;32m    130[0m [38;5;28;01mif[39;00m not_composite [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m has_images:
[1;32m    131[0m     [38;5;28;01mfor[39;00m a [38;5;129;01min[39;00m artists:
[0;32m--> 132[0m         a[38;5;241m.[39mdraw(renderer)
[1;32m    133[0m [38;5;28;01melse[39;00m:
[1;32m    134[0m     [38;5;66;03m# Composite any adjacent images together[39;00m
[1;32m    135[0m     image_group [38;5;241m=[39m []

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/artist.py:72[0m, in [0;36mallow_rasterization.<locals>.draw_wrapper[0;34m(artist, renderer)[0m
[1;32m     69[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     70[0m         renderer[38;5;241m.[39mstart_filter()
[0;32m---> 72[0m     [38;5;28;01mreturn[39;00m draw(artist, renderer)
[1;32m     73[0m [38;5;28;01mfinally[39;00m:
[1;32m     74[0m     [38;5;28;01mif[39;00m artist[38;5;241m.[39mget_agg_filter() [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/legend.py:769[0m, in [0;36mLegend.draw[0;34m(self, renderer)[0m
[1;32m    765[0m     [38;5;28mself[39m[38;5;241m.[39m_legend_box[38;5;241m.[39mset_width([38;5;28mself[39m[38;5;241m.[39mget_bbox_to_anchor()[38;5;241m.[39mwidth [38;5;241m-[39m pad)
[1;32m    767[0m [38;5;66;03m# update the location and size of the legend. This needs to[39;00m
[1;32m    768[0m [38;5;66;03m# be done in any case to clip the figure right.[39;00m
[0;32m--> 769[0m bbox [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_legend_box[38;5;241m.[39mget_window_extent(renderer)
[1;32m    770[0m [38;5;28mself[39m[38;5;241m.[39mlegendPatch[38;5;241m.[39mset_bounds(bbox[38;5;241m.[39mbounds)
[1;32m    771[0m [38;5;28mself[39m[38;5;241m.[39mlegendPatch[38;5;241m.[39mset_mutation_scale(fontsize)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/offsetbox.py:399[0m, in [0;36mOffsetBox.get_window_extent[0;34m(self, renderer)[0m
[1;32m    397[0m [38;5;28;01mif[39;00m renderer [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    398[0m     renderer [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mfigure[38;5;241m.[39m_get_renderer()
[0;32m--> 399[0m bbox [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_bbox(renderer)
[1;32m    400[0m [38;5;28;01mtry[39;00m:  [38;5;66;03m# Some subclasses redefine get_offset to take no args.[39;00m
[1;32m    401[0m     px, py [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_offset(bbox, renderer)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/offsetbox.py:366[0m, in [0;36mOffsetBox.get_bbox[0;34m(self, renderer)[0m
[1;32m    364[0m [38;5;28;01mdef[39;00m [38;5;21mget_bbox[39m([38;5;28mself[39m, renderer):
[1;32m    365[0m [38;5;250m    [39m[38;5;124;03m"""Return the bbox of the offsetbox, ignoring parent offsets."""[39;00m
[0;32m--> 366[0m     bbox, offsets [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_bbox_and_child_offsets(renderer)
[1;32m    367[0m     [38;5;28;01mreturn[39;00m bbox

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/offsetbox.py:484[0m, in [0;36mVPacker._get_bbox_and_child_offsets[0;34m(self, renderer)[0m
[1;32m    481[0m         [38;5;28;01mif[39;00m [38;5;28misinstance[39m(c, PackerBase) [38;5;129;01mand[39;00m c[38;5;241m.[39mmode [38;5;241m==[39m [38;5;124m"[39m[38;5;124mexpand[39m[38;5;124m"[39m:
[1;32m    482[0m             c[38;5;241m.[39mset_width([38;5;28mself[39m[38;5;241m.[39mwidth)
[0;32m--> 484[0m bboxes [38;5;241m=[39m [c[38;5;241m.[39mget_bbox(renderer) [38;5;28;01mfor[39;00m c [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mget_visible_children()]
[1;32m    485[0m (x0, x1), xoffsets [38;5;241m=[39m _get_aligned_offsets(
[1;32m    486[0m     [bbox[38;5;241m.[39mintervalx [38;5;28;01mfor[39;00m bbox [38;5;129;01min[39;00m bboxes], [38;5;28mself[39m[38;5;241m.[39mwidth, [38;5;28mself[39m[38;5;241m.[39malign)
[1;32m    487[0m height, yoffsets [38;5;241m=[39m _get_packed_offsets(
[1;32m    488[0m     [bbox[38;5;241m.[39mheight [38;5;28;01mfor[39;00m bbox [38;5;129;01min[39;00m bboxes], [38;5;28mself[39m[38;5;241m.[39mheight, sep, [38;5;28mself[39m[38;5;241m.[39mmode)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/offsetbox.py:366[0m, in [0;36mOffsetBox.get_bbox[0;34m(self, renderer)[0m
[1;32m    364[0m [38;5;28;01mdef[39;00m [38;5;21mget_bbox[39m([38;5;28mself[39m, renderer):
[1;32m    365[0m [38;5;250m    [39m[38;5;124;03m"""Return the bbox of the offsetbox, ignoring parent offsets."""[39;00m
[0;32m--> 366[0m     bbox, offsets [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_bbox_and_child_offsets(renderer)
[1;32m    367[0m     [38;5;28;01mreturn[39;00m bbox

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/offsetbox.py:511[0m, in [0;36mHPacker._get_bbox_and_child_offsets[0;34m(self, renderer)[0m
[1;32m    508[0m pad [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mpad [38;5;241m*[39m dpicor
[1;32m    509[0m sep [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39msep [38;5;241m*[39m dpicor
[0;32m--> 511[0m bboxes [38;5;241m=[39m [c[38;5;241m.[39mget_bbox(renderer) [38;5;28;01mfor[39;00m c [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mget_visible_children()]
[1;32m    512[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m bboxes:
[1;32m    513[0m     [38;5;28;01mreturn[39;00m Bbox[38;5;241m.[39mfrom_bounds([38;5;241m0[39m, [38;5;241m0[39m, [38;5;241m0[39m, [38;5;241m0[39m)[38;5;241m.[39mpadded(pad), []

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/offsetbox.py:366[0m, in [0;36mOffsetBox.get_bbox[0;34m(self, renderer)[0m
[1;32m    364[0m [38;5;28;01mdef[39;00m [38;5;21mget_bbox[39m([38;5;28mself[39m, renderer):
[1;32m    365[0m [38;5;250m    [39m[38;5;124;03m"""Return the bbox of the offsetbox, ignoring parent offsets."""[39;00m
[0;32m--> 366[0m     bbox, offsets [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_bbox_and_child_offsets(renderer)
[1;32m    367[0m     [38;5;28;01mreturn[39;00m bbox

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/offsetbox.py:484[0m, in [0;36mVPacker._get_bbox_and_child_offsets[0;34m(self, renderer)[0m
[1;32m    481[0m         [38;5;28;01mif[39;00m [38;5;28misinstance[39m(c, PackerBase) [38;5;129;01mand[39;00m c[38;5;241m.[39mmode [38;5;241m==[39m [38;5;124m"[39m[38;5;124mexpand[39m[38;5;124m"[39m:
[1;32m    482[0m             c[38;5;241m.[39mset_width([38;5;28mself[39m[38;5;241m.[39mwidth)
[0;32m--> 484[0m bboxes [38;5;241m=[39m [c[38;5;241m.[39mget_bbox(renderer) [38;5;28;01mfor[39;00m c [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mget_visible_children()]
[1;32m    485[0m (x0, x1), xoffsets [38;5;241m=[39m _get_aligned_offsets(
[1;32m    486[0m     [bbox[38;5;241m.[39mintervalx [38;5;28;01mfor[39;00m bbox [38;5;129;01min[39;00m bboxes], [38;5;28mself[39m[38;5;241m.[39mwidth, [38;5;28mself[39m[38;5;241m.[39malign)
[1;32m    487[0m height, yoffsets [38;5;241m=[39m _get_packed_offsets(
[1;32m    488[0m     [bbox[38;5;241m.[39mheight [38;5;28;01mfor[39;00m bbox [38;5;129;01min[39;00m bboxes], [38;5;28mself[39m[38;5;241m.[39mheight, sep, [38;5;28mself[39m[38;5;241m.[39mmode)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/offsetbox.py:366[0m, in [0;36mOffsetBox.get_bbox[0;34m(self, renderer)[0m
[1;32m    364[0m [38;5;28;01mdef[39;00m [38;5;21mget_bbox[39m([38;5;28mself[39m, renderer):
[1;32m    365[0m [38;5;250m    [39m[38;5;124;03m"""Return the bbox of the offsetbox, ignoring parent offsets."""[39;00m
[0;32m--> 366[0m     bbox, offsets [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_bbox_and_child_offsets(renderer)
[1;32m    367[0m     [38;5;28;01mreturn[39;00m bbox

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/offsetbox.py:511[0m, in [0;36mHPacker._get_bbox_and_child_offsets[0;34m(self, renderer)[0m
[1;32m    508[0m pad [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mpad [38;5;241m*[39m dpicor
[1;32m    509[0m sep [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39msep [38;5;241m*[39m dpicor
[0;32m--> 511[0m bboxes [38;5;241m=[39m [c[38;5;241m.[39mget_bbox(renderer) [38;5;28;01mfor[39;00m c [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mget_visible_children()]
[1;32m    512[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m bboxes:
[1;32m    513[0m     [38;5;28;01mreturn[39;00m Bbox[38;5;241m.[39mfrom_bounds([38;5;241m0[39m, [38;5;241m0[39m, [38;5;241m0[39m, [38;5;241m0[39m)[38;5;241m.[39mpadded(pad), []

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/offsetbox.py:799[0m, in [0;36mTextArea.get_bbox[0;34m(self, renderer)[0m
[1;32m    794[0m [38;5;28;01mdef[39;00m [38;5;21mget_bbox[39m([38;5;28mself[39m, renderer):
[1;32m    795[0m     _, h_, d_ [38;5;241m=[39m renderer[38;5;241m.[39mget_text_width_height_descent(
[1;32m    796[0m         [38;5;124m"[39m[38;5;124mlp[39m[38;5;124m"[39m, [38;5;28mself[39m[38;5;241m.[39m_text[38;5;241m.[39m_fontproperties,
[1;32m    797[0m         ismath[38;5;241m=[39m[38;5;124m"[39m[38;5;124mTeX[39m[38;5;124m"[39m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_text[38;5;241m.[39mget_usetex() [38;5;28;01melse[39;00m [38;5;28;01mFalse[39;00m)
[0;32m--> 799[0m     bbox, info, yd [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_text[38;5;241m.[39m_get_layout(renderer)
[1;32m    800[0m     w, h [38;5;241m=[39m bbox[38;5;241m.[39msize
[1;32m    802[0m     [38;5;28mself[39m[38;5;241m.[39m_baseline_transform[38;5;241m.[39mclear()

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/text.py:381[0m, in [0;36mText._get_layout[0;34m(self, renderer)[0m
[1;32m    379[0m clean_line, ismath [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_preprocess_math(line)
[1;32m    380[0m [38;5;28;01mif[39;00m clean_line:
[0;32m--> 381[0m     w, h, d [38;5;241m=[39m _get_text_metrics_with_cache(
[1;32m    382[0m         renderer, clean_line, [38;5;28mself[39m[38;5;241m.[39m_fontproperties,
[1;32m    383[0m         ismath[38;5;241m=[39mismath, dpi[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mfigure[38;5;241m.[39mdpi)
[1;32m    384[0m [38;5;28;01melse[39;00m:
[1;32m    385[0m     w [38;5;241m=[39m h [38;5;241m=[39m d [38;5;241m=[39m [38;5;241m0[39m

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/text.py:69[0m, in [0;36m_get_text_metrics_with_cache[0;34m(renderer, text, fontprop, ismath, dpi)[0m
[1;32m     66[0m [38;5;250m[39m[38;5;124;03m"""Call ``renderer.get_text_width_height_descent``, caching the results."""[39;00m
[1;32m     67[0m [38;5;66;03m# Cached based on a copy of fontprop so that later in-place mutations of[39;00m
[1;32m     68[0m [38;5;66;03m# the passed-in argument do not mess up the cache.[39;00m
[0;32m---> 69[0m [38;5;28;01mreturn[39;00m _get_text_metrics_with_cache_impl(
[1;32m     70[0m     weakref[38;5;241m.[39mref(renderer), text, fontprop[38;5;241m.[39mcopy(), ismath, dpi)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/text.py:77[0m, in [0;36m_get_text_metrics_with_cache_impl[0;34m(renderer_ref, text, fontprop, ismath, dpi)[0m
[1;32m     73[0m [38;5;129m@functools[39m[38;5;241m.[39mlru_cache([38;5;241m4096[39m)
[1;32m     74[0m [38;5;28;01mdef[39;00m [38;5;21m_get_text_metrics_with_cache_impl[39m(
[1;32m     75[0m         renderer_ref, text, fontprop, ismath, dpi):
[1;32m     76[0m     [38;5;66;03m# dpi is unused, but participates in cache invalidation (via the renderer).[39;00m
[0;32m---> 77[0m     [38;5;28;01mreturn[39;00m renderer_ref()[38;5;241m.[39mget_text_width_height_descent(text, fontprop, ismath)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/backends/backend_agg.py:217[0m, in [0;36mRendererAgg.get_text_width_height_descent[0;34m(self, s, prop, ismath)[0m
[1;32m    213[0m     [38;5;28;01mreturn[39;00m [38;5;28msuper[39m()[38;5;241m.[39mget_text_width_height_descent(s, prop, ismath)
[1;32m    215[0m [38;5;28;01mif[39;00m ismath:
[1;32m    216[0m     ox, oy, width, height, descent, font_image [38;5;241m=[39m \
[0;32m--> 217[0m         [38;5;28mself[39m[38;5;241m.[39mmathtext_parser[38;5;241m.[39mparse(s, [38;5;28mself[39m[38;5;241m.[39mdpi, prop)
[1;32m    218[0m     [38;5;28;01mreturn[39;00m width, height, descent
[1;32m    220[0m font [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_prepare_font(prop)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/mathtext.py:79[0m, in [0;36mMathTextParser.parse[0;34m(self, s, dpi, prop, antialiased)[0m
[1;32m     77[0m prop [38;5;241m=[39m prop[38;5;241m.[39mcopy() [38;5;28;01mif[39;00m prop [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;28;01melse[39;00m [38;5;28;01mNone[39;00m
[1;32m     78[0m antialiased [38;5;241m=[39m mpl[38;5;241m.[39m_val_or_rc(antialiased, [38;5;124m'[39m[38;5;124mtext.antialiased[39m[38;5;124m'[39m)
[0;32m---> 79[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_parse_cached(s, dpi, prop, antialiased)

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/mathtext.py:100[0m, in [0;36mMathTextParser._parse_cached[0;34m(self, s, dpi, prop, antialiased)[0m
[1;32m     97[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_parser [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:  [38;5;66;03m# Cache the parser globally.[39;00m
[1;32m     98[0m     [38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m[38;5;241m.[39m_parser [38;5;241m=[39m _mathtext[38;5;241m.[39mParser()
[0;32m--> 100[0m box [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_parser[38;5;241m.[39mparse(s, fontset, fontsize, dpi)
[1;32m    101[0m output [38;5;241m=[39m _mathtext[38;5;241m.[39mship(box)
[1;32m    102[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_output_type [38;5;241m==[39m [38;5;124m"[39m[38;5;124mvector[39m[38;5;124m"[39m:

File [0;32m/opt/anaconda3/lib/python3.12/site-packages/matplotlib/_mathtext.py:2165[0m, in [0;36mParser.parse[0;34m(self, s, fonts_object, fontsize, dpi)[0m
[1;32m   2162[0m     result [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_expression[38;5;241m.[39mparseString(s)
[1;32m   2163[0m [38;5;28;01mexcept[39;00m ParseBaseException [38;5;28;01mas[39;00m err:
[1;32m   2164[0m     [38;5;66;03m# explain becomes a plain method on pyparsing 3 (err.explain(0)).[39;00m
[0;32m-> 2165[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m [38;5;241m+[39m ParseException[38;5;241m.[39mexplain(err, [38;5;241m0[39m)) [38;5;28;01mfrom[39;00m [38;5;28;01mNone[39;00m
[1;32m   2166[0m [38;5;28mself[39m[38;5;241m.[39m_state_stack [38;5;241m=[39m []
[1;32m   2167[0m [38;5;28mself[39m[38;5;241m.[39m_in_subscript_or_superscript [38;5;241m=[39m [38;5;28;01mFalse[39;00m

[0;31mValueError[0m: 
$\\mathbf{x}^*$ (exact solution)
^
ParseException: Expected end of text, found '$'  (at char 0), (line:1, col:1)

